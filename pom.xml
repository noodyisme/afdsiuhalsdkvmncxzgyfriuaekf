<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.capitalone.identity.identitybuilder</groupId>
  <artifactId>identity-builder-policy-core</artifactId>
  <version>1.17.0-SNAPSHOT</version>
  <name>identity-builder-policy-core</name>
  <description>JAR dependency used to standardize Journey and Domain policy execution runtimes across the Identity Builder platform</description>
  <developers>
    <developer>
      <name>Team Heimdall</name>
      <email>heimdall@capitalone.com</email>
    </developer>
  </developers>
  <scm>
    <developerConnection>scm:git:https://github.cloud.capitalone.com/identitybuilder/identity-builder-policy-core.git</developerConnection>
  </scm>
  <distributionManagement>
    <repository>
      <id>central</id>
      <url>https://artifactory.cloud.capitalone.com/artifactory/maven-internalfacing</url>
    </repository>
  </distributionManagement>
  <properties>
    <chassis.starter.bom.version>4.10.8.RELEASE</chassis.starter.bom.version>
    <idb.core.event.models>2.0.0</idb.core.event.models>
    <idb.decision.engine.version>4.0.0</idb.decision.engine.version>
    <idb.config.store.client.version>3.0.0</idb.config.store.client.version>
    <idb.audit.version>1.0.1</idb.audit.version>
    <camel.version>3.21.0</camel.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compiler.target>17</maven.compiler.target>
    <maven.compiler.source>17</maven.compiler.source>
    <sonar.coverage.exclusions>
      **com/capitalone/identity/identitybuilder/policycore/rest/config/filewatcher/**
    </sonar.coverage.exclusions>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.capitalone.chassis.engine.starters</groupId>
        <artifactId>chassis-spring-boot-starters-bom</artifactId>
        <version>${chassis.starter.bom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.camel.springboot</groupId>
        <artifactId>camel-spring-boot-bom</artifactId>
        <version>${camel.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-bom</artifactId>
        <version>${camel.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <!--  START PINNED ROOT LEVEL DEPENDENCIES!!!-->
    <dependency>
      <groupId>io.projectreactor.netty</groupId>
      <artifactId>reactor-netty-http</artifactId>
      <version>1.0.39</version>
    </dependency>
    <!--  END PINNED ROOT LEVEL DEPENDENCIES!!!-->
    <dependency>
      <groupId>com.capitalone.chassis.engine.starters</groupId>
      <artifactId>chassis-spring-boot-starter-jersey-extensions</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.yaml</groupId>
          <artifactId>snakeyaml</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.test-framework</groupId>
      <artifactId>jersey-test-framework-core</artifactId>
      <version>2.37</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.test-framework.providers</groupId>
      <artifactId>jersey-test-framework-provider-inmemory</artifactId>
      <version>2.37</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.capitalone.dsd</groupId>
      <artifactId>elasticache-client</artifactId>
      <version>2.0.0</version>
    </dependency>
    <dependency>
      <groupId>com.capitalone.chassis.engine.starters</groupId>
      <artifactId>chassis-spring-boot-starter-core-security</artifactId>
    </dependency>
    <dependency>
      <groupId>com.capitalone.chassis.engine.starters</groupId>
      <artifactId>chassis-spring-boot-starter-dfs-sdp</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.apache.kafka</groupId>
          <artifactId>kafka-clients</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-clients</artifactId>
      <version>3.5.1</version>
    </dependency>
    <dependency>
      <groupId>com.capitalone.identity.identitybuilder</groupId>
      <artifactId>identity-builder-core-event-models</artifactId>
      <version>${idb.core.event.models}</version>
    </dependency>
    <dependency>
      <groupId>com.capitalone.chassis.engine.starters</groupId>
      <artifactId>chassis-spring-boot-starter-dfs-logfile</artifactId>
    </dependency>
    <dependency>
      <groupId>com.capitalone.chassis.engine.starters</groupId>
      <artifactId>chassis-spring-boot-starter-service-locator</artifactId>
    </dependency>
    <dependency>
      <groupId>com.capitalone.chassis.engine.starters</groupId>
      <artifactId>chassis-spring-boot-starter-core-dao</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.yaml</groupId>
          <artifactId>snakeyaml</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!-- deprecated to be replaced by chassis-spring-boot-oauth-client and chassis-spring-boot-starter-service-locator -->
      <groupId>com.capitalone.chassis.engine.starters</groupId>
      <artifactId>chassis-spring-boot-starter-consumer-services-rest</artifactId>
    </dependency>
    <dependency>
      <groupId>com.capitalone.chassis.engine.starters</groupId>
      <artifactId>chassis-spring-boot-oauth-client</artifactId>
    </dependency>
    <dependency>
      <!-- will build without this, but all domains need to registerClasses(JacksonFeature.class)-->
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-jackson</artifactId>
      <version>2.35</version>
    </dependency>
    <dependency>
      <!-- Required by chassis-core-security (com.capitalone.chassis.elbowgrease.apikey.keyresolver.ApiKeyResolver) -->
      <groupId>com.capitalone.chassis.engine.starters</groupId>
      <artifactId>chassis-spring-boot-starter-referencedata-property-apikey</artifactId>
    </dependency>
    <dependency>
      <groupId>com.capitalone.dsd.utilities</groupId>
      <artifactId>crypto-lib</artifactId>
      <version>20.02.01.00</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-reload4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.capitalone.identity.identitybuilder</groupId>
      <artifactId>identity-builder-config-store-client</artifactId>
      <version>${idb.config.store.client.version}</version>
    </dependency>
    <dependency>
      <groupId>com.capitalone.identity.identitybuilder</groupId>
      <artifactId>common-audit</artifactId>
      <version>${idb.audit.version}</version>
    </dependency>
    <dependency>
      <groupId>com.capitalone.identity.identitybuilder</groupId>
      <artifactId>decision-engine-core</artifactId>
      <version>${idb.decision.engine.version}</version>
    </dependency>
    <dependency>
      <groupId>org.bitbucket.b_c</groupId>
      <artifactId>jose4j</artifactId>
      <version>0.9.3</version>
    </dependency>
    <dependency>
      <groupId>com.google.re2j</groupId>
      <artifactId>re2j</artifactId>
      <version>1.7</version>
    </dependency>
    <!-- high sev vulns brought by xstream-1.4.14 and xstream-1.4.17 from decision-engine-ci-client -->
    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
      <version>1.4.20</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>32.1.0-jre</version>
    </dependency>
    <dependency>
      <!-- Provides the @Trace annotation -->
      <groupId>com.newrelic.agent.java</groupId>
      <artifactId>newrelic-api</artifactId>
      <version>5.9.0</version> <!-- matches New Relic agent version in Docker image -->
    </dependency>
    <dependency>
      <groupId>org.apache.camel.springboot</groupId>
      <artifactId>camel-spring-boot-starter</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.apache.camel</groupId>
          <artifactId>camel-xml-jaxb-dsl</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.camel.springboot</groupId>
      <artifactId>camel-caffeine-lrucache-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel.springboot</groupId>
      <artifactId>camel-jackson-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel.springboot</groupId>
      <artifactId>camel-groovy-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-stringtemplate</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-xml-io-dsl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-test-spring-junit5</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.apache.camel</groupId>
          <artifactId>camel-xml-jaxb</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>json-schema-validator</artifactId>
      <version>1.0.57</version>
    </dependency>
    <dependency>
      <groupId>org.meanbean</groupId>
      <artifactId>meanbean</artifactId>
      <version>2.0.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>4.0.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.capitalone.chassis.engine.starters</groupId>
      <artifactId>chassis-spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <!-- Excluding JUnit 4 to prevent usage in code or by surefire/IDE -->
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-inline</artifactId>
      <version>4.0.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-multipart</artifactId>
    </dependency>
    <dependency>
      <groupId>com.capitalone.documentupload</groupId>
      <artifactId>docupload-virusscan-service-client-lib</artifactId>
      <version>1.5.0.04</version>
      <exclusions>
        <exclusion>
          <!-- not in use for the virus scan service -->
          <artifactId>epf-core</artifactId>
          <groupId>com.capitalone.epf</groupId>
        </exclusion>
        <!-- CVE-2019-17571 -->
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock-standalone</artifactId>
      <version>2.27.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.jayway.jsonpath</groupId>
      <artifactId>json-path</artifactId>
      <version>2.8.0</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.nimbusds</groupId>
      <artifactId>nimbus-jose-jwt</artifactId>
    </dependency>
    <dependency>
      <groupId>com.capitalone.fs</groupId>
      <artifactId>secret-sauce</artifactId>
      <version>1.0.6</version>
      <exclusions>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib</artifactId>
      <version>1.9.10</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <!-- For Sonar stage -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.9.0</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.5.3</version>
        <dependencies>
          <dependency>
            <groupId>org.sonatype.plexus</groupId>
            <artifactId>plexus-cipher</artifactId>
            <version>1.7</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.8</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
                <propertyName>surefireArgLine</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>report</id>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- end Sonar -->
      <!-- JUnit 5 requires Surefire version 2.22.0 or higher -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.2</version>
        <configuration>
          <reuseForks>false</reuseForks>
          <forkCount>1</forkCount>
          <argLine>
              @{surefireArgLine}
            --add-exports=java.naming/com.sun.jndi.ldap=ALL-UNNAMED
            --add-opens=java.base/java.lang=ALL-UNNAMED
            --add-opens=java.base/java.lang.invoke=ALL-UNNAMED
            --add-opens=java.base/java.io=ALL-UNNAMED
            --add-opens=java.base/java.security=ALL-UNNAMED
            --add-opens=java.base/java.util=ALL-UNNAMED
            --add-opens=java.management/javax.management=ALL-UNNAMED
            --add-opens=java.naming/javax.naming=ALL-UNNAMED
            --add-opens java.base/java.time=ALL-UNNAMED
            --add-opens=java.base/java.lang.reflect=ALL-UNNAMED
            --add-opens java.base/java.net=ALL-UNNAMED
            --add-exports=java.base/sun.nio.ch=ALL-UNNAMED
            --add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED
          </argLine>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>